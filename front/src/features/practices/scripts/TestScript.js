export const scripts = "#include <stdio.h>\n#include <stdlib.h>\n#include <unistd.h>\n#include <string.h>\n#include \"person.h\"\nint pagenum, recordnum;\nchar **tmparray;\nint main(int argc, char *argv[])\n{\nint i;\nchar header_page[PAGE_SIZE], page[PAGE_SIZE];\nchar **heaparray;\nFILE *inputfp;\nFILE *outputfp;\nif(argc != 4){\nfprintf(stderr, \"args error\\n\");\nexit(1);\n}\nif(strcmp(argv[1], \"s\")){\n fprintf(stderr, \"only s option\\n\");\nexit(1);\n}\ninputfp = fopen(argv[2], \"r\");\noutputfp = fopen(argv[3], \"w+\");\nif(inputfp == NULL || outputfp == NULL){ \nfprintf(stderr, \"fopen error\\n\");\nexit(1);\n}\nreadPage(inputfp, header_page, 0);\nmemcpy(&pagenum, header_page, sizeof(int));\nmemcpy(&recordnum, header_page+4, sizeof(int));\nheaparray = malloc(sizeof(char*) * recordnum+1);\ntmparray = malloc(sizeof(char*) * recordnum+1);\nfor(i = 0; i <= recordnum; i++){\nheaparray[i] = malloc(sizeof(char) * RECORD_SIZE);\ntmparray[i] = malloc(sizeof(char) * RECORD_SIZE);\n}\nbuildHeap(inputfp, heaparray);\nmakeSortedFile(outputfp, heaparray);\nreturn 1;\n}\n"